/*
Solved
Easy
Given a pattern and a string s, find if s follows the same pattern.
Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

Example 1:
Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:
Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:
Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false
*/

class Solution {
public:
    bool wordPattern(string pattern, string s) {
    unordered_map<char, string> mp1;
    unordered_map<string, char> mp2;

    istringstream ss(s);
    vector<string> words;
    string word;
    while(ss>>word)
    {
        words.push_back(word);
    }
     if(pattern.length()!=words.size()){
     return false;
     }

       for( int i=0;i<pattern.size();++i)
       {
        char char1=pattern[i];
        string char2=words[i];
          if(mp1.find(char1)!=mp1.end())
          {
            if(mp1[char1]!=char2)
            {
            return false;
          }
          }
         else{
          mp1[char1]=char2;
         }//[a:dog,b:cat]
      if(mp2.find(char2)!=mp2.end())
          {
            if(mp2[char2]!=char1){
            return false;
          }
       }
           else{
          mp2[char2]=char1;
           }
       } //[dog,a: cat:b,]
       return true;
    }
};

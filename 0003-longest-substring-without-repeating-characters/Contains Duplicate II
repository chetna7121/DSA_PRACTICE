class Solution {
public:
/*
Solved
Easy
Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.
Example 1:
Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:
Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:
*/

    bool containsNearbyDuplicate(vector<int>& nums, int k) {
         unordered_map<int, int> mp; // Map to store number to its last seen index
        
        for (int i = 0; i < nums.size(); ++i) { 
            if (mp.find(nums[i]) != mp.end()) { //ex-[1->0,2->1,3->2,1->3] finds 1 again in map, current index 3
                int lastSeenIndex = mp[nums[i]]; // last seen index of 1 was 0, 1->0
             
                if (abs(i - lastSeenIndex) <= k) {//3-0(for element 1)
                    return true; 
                }
            }
            
            mp[nums[i]] = i;//insert key values in map, 1->0
        }
        return false; 
    }
};

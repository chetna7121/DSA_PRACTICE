
class Solution {
  public:
    // Function to return Breadth First Traversal of given graph.
    vector<int> bfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        
        //creating visited array
        //base coditions if we have only one node
        int visited[V]={0};
        
        visited[0]=1;
        queue<int> q;
        q.push(0);
        vector<int>bfs;
        while(!q.empty())
        {
            int node=q.front();
            q.pop();
            bfs.push_back(node);
            
            //checking neighbours of node from adjacency list
            for(auto it: adj[node]) //iterating all thee nodes (vector) storing their adjacent nodes
            {
                if(!visited[it]){ // if  any adjaceny node is visted it will not be marked as 1 and  won't be added to queue
                    visited[it]=1;
                    q.push(it);
                }
            }
        }
        return bfs;
        
    }
};

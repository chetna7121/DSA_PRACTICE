class Solution {
 public:
bool dfs(int node, vector<int> adj[], int visited[], int parent) {
        visited[node] = 1;

        for (auto it : adj[node]) {
            if (!visited[it]) {
                if (dfs(it, adj, visited, node)) {
                    return true;
                }
            } else if (it != parent) {
                return true;  // Cycle detected
            }
        }

        return false;  // No cycle detected in this DFS traversal
    }

    bool isCycle(int V, vector<int> adj[]) {
        int visited[V] = {0};

        for (int i = 0; i < V; ++i) {
            if (!visited[i] && dfs(i, adj, visited, -1)) {
                return true;  // Cycle detected
            }
        }

        return false;  // No cycle detected in the entire graph
    }


};
